Bottom: 8aa2fa117dfbef83b28bf057cacea293bdf75608
Top:    e4991f6abe44047132d6877f82ff5db598a56299
Author: Johannes Rudolph <johannes_rudolph@gmx.de>
Date:   2009-10-04 17:09:35 +0200

Refresh of add-test-revealing-problems-wi

---

diff --git a/bytecode/src/test/scala/net/virtualvoid/bytecode/BytecodeCompilerSpecs.scala b/bytecode/src/test/scala/net/virtualvoid/bytecode/BytecodeCompilerSpecs.scala
index 5d8d839..2c8ecf0 100644
--- a/bytecode/src/test/scala/net/virtualvoid/bytecode/BytecodeCompilerSpecs.scala
+++ b/bytecode/src/test/scala/net/virtualvoid/bytecode/BytecodeCompilerSpecs.scala
@@ -38,14 +38,17 @@ object BytecodeCompilerSpecs extends Specification{
       .apply(12.453) must be_==(12.453)}
     "store Int after double" in {
       import java.lang.{Double => jDouble}
-      compiler.compile(classOf[java.lang.Double])(d => 
-        _ ~ 
-          d.load ~ 
+      compiler.compile(classOf[java.lang.Double])(dO => 
+        _ ~
+          dO.load ~
           invokemethod1(_.doubleValue) ~
-          withLocal(_ => f => f) ~ // store and forget
-          bipush(5) ~
-          withLocal(d => d.load) ~
-          invokemethod1(jDouble.valueOf(_))
+          withLocal(d =>
+            _ ~
+              bipush(5) ~
+              withLocal(i =>
+                _ ~
+                  d.load ~
+                  invokemethod1(jDouble.valueOf(_))))
       ).apply(.753) must be_==(.753)
     }
     "store Int after double, replace double by String, access int" in {
